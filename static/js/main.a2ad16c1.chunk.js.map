{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","todos","setTodos","todo","setTodo","todoEdit","setTodoEdit","textEdit","setTextEdit","useEffect","temp","localStorage","getItem","loadedTodos","JSON","parse","dataToJson","stringify","setItem","className","onSubmit","e","preventDefault","newTodo","id","Date","getTime","text","completed","alert","concat","type","onChange","target","value","placeholder","map","onClick","updatedTodos","filter","deleteTodo","name","toggleComplete","checked","htmlFor","editTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAiJeA,MA5If,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA0EA,OAjEAC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAE3BG,GACFX,EAASW,KAEV,IAEHJ,qBAAU,WACR,IAAMO,EAAaF,KAAKG,UAAUhB,GAClCU,aAAaO,QAAQ,QAASF,KAC7B,CAACf,IAsDF,qBAAKkB,UAAU,MAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,4CAEF,uBAAMC,SAzDZ,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdC,IAAI,IAAIC,MAAOC,UACfC,KAAMxB,EACNyB,WAAW,GAEA,KAATzB,EACF0B,MAAM,0BAQN3B,EAAS,YAAID,GAAO6B,OAAOP,IAG7BnB,EAAQ,KAqCJ,UACE,uBACE2B,KAAK,OACLC,SAAU,SAACX,GAAD,OAAOjB,EAAQiB,EAAEY,OAAOC,QAClCA,MAAO/B,EACPgC,YAAY,sBAGd,wBAAQJ,KAAK,SAAb,kBAED9B,EAAMmC,KAAI,SAACjC,GAAD,OACT,sBAAmBgB,UAAU,kBAA7B,UACGd,IAAaF,EAAKqB,GACjB,uBACEL,UAAU,WACVY,KAAK,OACLC,SAAU,SAACX,GAAD,OAAOb,EAAYa,EAAEY,OAAOC,QACtCA,MAAO3B,IAGT,qBAAKY,UAAU,cAGjB,wBAAQA,UAAU,UAAUkB,QAAS,kBAzD/C,SAAoBb,GAClB,IAAMc,EAAe,YAAIrC,GAAOsC,QAAO,SAACpC,GAAD,OAAUA,EAAKqB,KAAOA,KAE7DtB,EAASoC,GAsD0CE,CAAWrC,EAAKqB,KAA3D,SACE,cAAC,IAAD,MAGF,uBACEiB,KAAK,OACLjB,GAAG,OACHO,KAAK,WACLC,SAAU,kBA3DtB,SAAwBR,GACtB,IAAMc,EAAe,YAAIrC,GAAOmC,KAAI,SAACjC,GAInC,OAHIA,EAAKqB,KAAOA,IACdrB,EAAKyB,WAAazB,EAAKyB,WAElBzB,KAETD,EAASoC,GAoDiBI,CAAevC,EAAKqB,KACpCmB,QAASxC,EAAKyB,YAEhB,uBAAOgB,QAAQ,OAAOzB,UAAU,OAAhC,SACGhB,EAAKwB,OAEPtB,IAAaF,EAAKqB,GACjB,wBACEL,UAAU,kBACVkB,QAAS,kBA1DvB,SAAkBb,GAChB,IAAMc,EAAe,YAAIrC,GAAOmC,KAAI,SAACjC,GAInC,OAHIA,EAAKqB,KAAOA,IACdrB,EAAKwB,KAAOpB,GAEPJ,KAETD,EAASoC,GACThC,EAAY,MACZE,EAAY,IAiDeqC,CAAS1C,EAAKqB,KAF/B,SAIE,cAAC,IAAD,MAGF,wBAAQL,UAAU,WAAWkB,QAAS,kBAAM/B,EAAYH,EAAKqB,KAA7D,SACE,cAAC,IAAD,QAnCIrB,EAAKqB,aC/FzBsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a2ad16c1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AiFillDelete, AiFillEdit, AiOutlineCheck } from \"react-icons/ai\";\n\nimport \"./app.scss\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [todoEdit, setTodoEdit] = useState(null);\n  const [textEdit, setTextEdit] = useState(\"\");\n  /*   const [alert, setAlert] = useState(false); */\n\n  /* useEffect(() => {\n    if (todo === \"\") {\n      alert(\"Please enter some text\");\n    }\n  }, [setTodo]); */\n\n  useEffect(() => {\n    const temp = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(temp);\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const dataToJson = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", dataToJson);\n  }, [todos]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    if (todo === \"\") {\n      alert(\"Please enter some text\");\n      /* const alertmsg = \"Please enter some text\";\n      return (\n        <div id=\"please\">\n          <h2>{alertmsg}</h2>\n        </div>\n      ); */\n    } else {\n      setTodos([...todos].concat(newTodo));\n    }\n\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function editTodo(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = textEdit;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n    setTodoEdit(null);\n    setTextEdit(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\">\n        <div className=\"heading-wrapper\">\n          <h1>Todo App</h1>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={(e) => setTodo(e.target.value)}\n            value={todo}\n            placeholder=\"Add your new todo\"\n          />\n\n          <button type=\"submit\">+</button>\n        </form>\n        {todos.map((todo) => (\n          <div key={todo.id} className=\"todos-container\">\n            {todoEdit === todo.id ? (\n              <input\n                className=\"edit-box\"\n                type=\"text\"\n                onChange={(e) => setTextEdit(e.target.value)}\n                value={textEdit}\n              ></input>\n            ) : (\n              <div className=\"todo-text\">{/* {todo.text} */}</div>\n            )}\n\n            <button className=\"del-btn\" onClick={() => deleteTodo(todo.id)}>\n              <AiFillDelete />\n            </button>\n\n            <input\n              name=\"done\"\n              id=\"done\"\n              type=\"checkbox\"\n              onChange={() => toggleComplete(todo.id)}\n              checked={todo.completed}\n            />\n            <label htmlFor=\"done\" className=\"line\">\n              {todo.text}\n            </label>\n            {todoEdit === todo.id ? (\n              <button\n                className=\"submit-edit-btn\"\n                onClick={() => editTodo(todo.id)}\n              >\n                <AiOutlineCheck />\n              </button>\n            ) : (\n              <button className=\"edit-btn\" onClick={() => setTodoEdit(todo.id)}>\n                <AiFillEdit />\n              </button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}